
on: 
 #workflow_dispatch is run on command
 workflow_dispatch:
 #commented for multiple actions examples for the same project
 #pull request will run on a completed pull request on the branch specifid
 #pull_request:
 #   branches:
 #     - master

jobs:
  build:
    #use either windows runners (windows-latest) or Linux (ubuntu-latest)
    #https://docs.github.com/en/enterprise-cloud@latest/actions/using-github-hosted-runners/about-github-hosted-runners
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v1

    - uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}

    #reading params from a json file (example, a bicep json file)
    - id: getParams
      run: |
        content=`cat ./synapse.main.params.json`
        # the following lines are only required for multi line json
        content="${content//'%'/'%25'}"
        content="${content//$'\n'/'%0A'}"
        content="${content//$'\r'/'%0D'}"
        # end of optional handling for multi line json
        echo "::set-output name=packageJson::$content"
    
    #testing output from the previous command
    #- name: echo synapseWorkspaceName
    #  run: echo "${{fromJson(steps.getParams.outputs.packageJson).parameters.synapseWorkspaceName.value}}.sql.azuresynapse.net"
    
    #- name: echo synapseDedicatedSQLPool
    #  run: echo "${{fromJson(steps.getParams.outputs.packageJson).parameters.synapseDedicatedSQLPool.value}}"

    #how to read secrets from an Azure keyvault (or possible to use the Service Principal if added to the database as a contained user)
    #https://docs.microsoft.com/en-us/azure/developer/github/github-key-vault
    - uses: azure/get-keyvault-secrets@v1
      with:
        keyvault: "bicep1-kv" # name of key vault in Azure portal
        secrets: "bicep-asw-admin-name,bicep-asw-admin-pwd"  # comma separated list of secret keys to fetch from key vault 
      id: getKeyVaultSecrets # ID for secrets that you will reference

    #https://github.com/Azure/sql-action
    #https://github.com/Azure/sql-action/issues/93 - open issue for using managed identity for sql login
    #sqlpackage params https://docs.microsoft.com/en-us/sql/tools/sqlpackage/sqlpackage-publish?view=sql-server-ver15#parameters-for-the-publish-action
    #dotnet build options: https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-build#options

    #working
    #- uses: actions/setup-dotnet@v2
    #
    #- name: run dotnet build
    #  run: dotnet build "./sdksqlproj/sdksqlproj.sqlproj" /p:NetCoreBuild=true /p:NETCoreTargetsPath="./"     
    #
    #- name: deploy dacpac
    #  uses: azure/sql-action@v1.3
    #  with:
    #    connection-string: "Server=tcp:${{fromJson(steps.getParams.outputs.packageJson).parameters.synapseWorkspaceName.value}}.sql.azuresynapse.net,1433;Initial Catalog=${{fromJson(steps.getParams.outputs.packageJson).parameters.synapseDedicatedSQLPool.value}};User ID=${{steps.getKeyVaultSecrets.outputs.bicep-asw-admin-name}};Password=${{steps.getKeyVaultSecrets.outputs.bicep-asw-admin-pwd}}"
    #    dacpac-package: "D:\\a\\sdksqlproj\\sdksqlproj\\sdksqlproj\\bin\\Debug\\sdksqlproj.dacpac"
    #    arguments: '/Properties:DropObjectsNotInSource=false /Properties:ExcludeObjectType=ExternalFileFormats' # Optional parameters for SqlPackage Publish
    #working

    #also working
    - name: build and deploy project
      uses: azure/sql-action@v1.3
      with:
        connection-string: "Server=tcp:${{fromJson(steps.getParams.outputs.packageJson).parameters.synapseWorkspaceName.value}}.sql.azuresynapse.net,1433;Initial Catalog=${{fromJson(steps.getParams.outputs.packageJson).parameters.synapseDedicatedSQLPool.value}};User ID=${{steps.getKeyVaultSecrets.outputs.bicep-asw-admin-name}};Password=${{steps.getKeyVaultSecrets.outputs.bicep-asw-admin-pwd}}"
        project-file: './sdksqlproj/sdksqlproj.sqlproj'
        build-arguments: '/p:NetCoreBuild=true /p:NETCoreTargetsPath="./"'                                      # Optional arguments passed to dotnet build
        arguments: '/Properties:DropObjectsNotInSource=false /Properties:ExcludeObjectType=ExternalFileFormats' # Optional parameters for SqlPackage Publish
    #also working
    